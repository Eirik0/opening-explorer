name: opex

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [ opened, reopened, synchronize ]

env:
  # This should be the same as `command_line` under `[run]` in `.coveragerc`
  test-command-line: -m unittest discover -v -s ./test -p test_*.py
  # This should be the same as `fail_under` under `[report]` in `.coveragerc`
  coverage-minimum-percent: 0
  # Directories containing files to format and lint
  source-dirs: opex test

jobs:
  run-tests:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ 3.x ]
        should-run-coverage: [ false ]
        include:
          - os: ubuntu-latest
            python-version: 3.x
            should-run-coverage: true
        exclude:
          - os: ubuntu-latest
            python-version: 3.x
            should-run-coverage: false

    steps:
    # Setup
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Formatting
    - name: Format with yapf
      run: |
        yapf -d -r -p -vv ${{ env.source-dirs }}

    # Linting
    - name: Lint with pylint
      run: |
        pylint -v ${{ env.source-dirs }}

    # Test without coverage
    - name: Run unittest without coverage
      if: ${{ !matrix.should-run-coverage }}
      run: |
        python ${{ env.test-command-line }}

    # Or test with coverage and subsequent related actions
    - name: Run unittest with coverage
      if: ${{ matrix.should-run-coverage }}
      run: |
        coverage run ${{ env.test-command-line }}

    - name: Generate coverage xml
      if: ${{ matrix.should-run-coverage }}
      # Override default `fail_under`
      run: |
        coverage xml --fail-under 0

    - name: Comment coverage on PR
      if: github.event_name == 'pull_request' && ${{ matrix.should-run-coverage }}
      uses: 5monkeys/cobertura-action@v7
      with:
        path: coverage.xml
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        skip_covered: false
        show_line: true
        show_branch: true
        show_missing: true
        minimum_coverage: ${{ env.coverage-minimum-percent }}

    - name: Upload coverage
      if: ${{ matrix.should-run-coverage }}
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: coverage.xml

    - name: Check minimum coverage
      if: ${{ matrix.should-run-coverage }}
      run: |
        coverage report --fail-under ${{ env.coverage-minimum-percent }}
